name: Build and Release

on:
  push:
    tags:
        - 'v*'

jobs:

  build_release:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macOS-latest]
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      run: |
        pip install poetry

    - name: Configure Poetry
      working-directory: src
      run: |
        poetry config virtualenvs.create false

    - name: Install dependencies
      working-directory: src  
      run: |
        poetry install

    - name: Build with PyInstaller
      working-directory: src
      run: poetry run pyinstaller --onefile --add-data './StyleFrontend:StyleFrontend' --add-data './database:database' --add-data './QT_GUI:QT_GUI' --add-data './qbstyles:qbstyles' --add-data './resources.py:.' start.py

      
    - name: Upload dist directory
      uses: actions/upload-artifact@v4
      with:
        name: BPE-${{ matrix.os }}
        path: src/dist/*

    release:
        name: "Prelease"
        needs: build_release
        runs-on: ubuntu-latest
        steps:
            - uses: actions/download-artifact@v3
            - name: Display fetched artifacts
            run: ls -R
            - name: Emit a Github Release
            uses: "marvinpinto/action-automatic-releases@latest"
            with:
                repo_token: "${{ secrets.GITHUB_TOKEN }}"
                automatic_release_tag: "latest"
                prerelease: true
                title: "Development Build"
                files: |
                BPE-windows-latest/*.zip
                BPE-macos-latest/*.zip
                BPE-ubuntu-latest/*.zip