name: BPE Release 

on:
  push:
    tags:
        - 'v*'

jobs:

  build_release:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macOS-latest]
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      run: |
        pip install poetry

    - name: Configure Poetry
      working-directory: src
      run: |
        poetry config virtualenvs.create false

    - name: Install dependencies
      working-directory: src  
      run: |
        poetry install

    - name: Build with PyInstaller
      working-directory: src
      run: poetry run pyinstaller --add-data './Logs:Logs'  --add-data './StyleFrontend:StyleFrontend' --add-data './database:database' --add-data './QT_GUI:QT_GUI' --add-data './qbstyles:qbstyles' --add-data './resources.py:.' --name=BiophysicalEssentials -i './QT_GUI/Button/light_mode/offline_analysis/bpe_logo_small.png' start.py


    - name: Zip dist directory
      shell: bash
      run: |
        if [[ "${{ runner.os }}" == "Windows" ]]; then
            7z a -tzip BPE-${{ matrix.os }}.zip *
        else
          tar -czvf BPE-${{ matrix.os }}.tar.gz *
        fi
      working-directory: src/dist
    
    - name: Display fetched artifacts
      run: ls -R

    - name: Upload zipped dist directory
      uses: actions/upload-artifact@v4
      with:
        name: BPE-${{ matrix.os }}
        path: src/dist/BPE-${{ matrix.os }}.*

  release:
    name: "Tagged Prelease"
    needs: build_release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: BPE-windows-latest
          path: BPE-windows-latest/*.zip

      - uses: actions/download-artifact@v4
        with:
          name: BPE-macOS-latest
          path: BPE-macOS-latest/*.tar.gz
  
      - uses: actions/download-artifact@v4
        with:
          name: BPE-ubuntu-latest
          path: BPE-ubuntu-latest/*.tar.gz
    
      - name: Display fetched artifacts
        run: ls -R

      - name: Emit a Github Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: true
          title: "Development Build"
          files: |
            BPE-windows-latest/*.zip
            BPE-macOS-latest/*.tar.gz
            BPE-ubuntu-latest/*.tar.gz